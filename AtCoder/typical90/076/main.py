#!/usr/bin/env python3
import sys
import bisect

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, A: "List[int]"):
    B = [0]
    AA = A + A
    tmp = 0
    for a in AA:
        tmp += a
        B.append(tmp)
    s = sum(A)
    target = s / 10
    n = len(A)

    current_sum = 0
    for L in range(n):
        current_sum = B[L]

        search_target = target + current_sum

        Rleft = L + 1
        Rright = L + N
        while Rleft <= Rright:
            mid = (Rleft + Rright) // 2
            candidate = B[mid]
            if candidate == search_target:
                print(YES)
                return
            elif candidate > search_target:
                Rright = mid - 1
            else:
                Rleft = mid + 1
    print(NO)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)


if __name__ == '__main__':
    main()
