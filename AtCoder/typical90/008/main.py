#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, S: str):
    dp = {"a": 0, "t": 0, "c": 0, "o": 0, "d": 0, "e": 0, "r": 0}

    for c in S:
        if c == "a":
            dp["a"] = (dp["a"] + 1) % MOD
        elif c == "t":
            dp["t"] = (dp["t"] + dp["a"]) % MOD
        elif c == "c":
            dp["c"] = (dp["c"] + dp["t"]) % MOD
        elif c == "o":
            dp["o"] = (dp["o"] + dp["c"]) % MOD
        elif c == "d":
            dp["d"] = (dp["d"] + dp["o"]) % MOD
        elif c == "e":
            dp["e"] = (dp["e"] + dp["d"]) % MOD
        elif c == "r":
            dp["r"] = (dp["r"] + dp["e"]) % MOD
    print(dp["r"])
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)


if __name__ == '__main__':
    main()
