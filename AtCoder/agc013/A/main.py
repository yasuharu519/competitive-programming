#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    n = len(A)
    if n == 1:
        print(1)
        return

    increasing = False
    decreasing = False
    left = 0
    count = 0
    prev = A[left]
    for j in range(1, n):
        if prev == A[j]:
            continue
        elif prev < A[j]:
            if decreasing:
                decreasing = False
                count += 1
            else:
                increasing = True
            prev = A[j]
        else:
            if increasing:
                increasing = False
                count += 1
            else:
                decreasing = True
            prev = A[j]
    count += 1
    print(count)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)


if __name__ == '__main__':
    main()
