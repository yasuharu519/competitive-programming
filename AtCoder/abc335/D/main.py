#!/usr/bin/env python3
import sys


def solve(N: int):
    result = [["0"] * N for _ in range(N)]
    result[N // 2][N // 2] = "T"


    x, y = 0, 0
    directions = [[0, 1], [1, 0], [0, -1], [-1, 0]]
    d_index = 0
    passed = set()

    for i in range(1, N**2):
        result[x][y] = str(i)
        passed.add((x, y))

        diff_x, diff_y = directions[d_index]
        next_x, next_y = x + diff_x, y + diff_y

        if 0 <= next_x < N and 0 <= next_y < N and (next_x, next_y) not in passed:
            pass
        else:
            d_index = (d_index + 1) % 4
            diff_x, diff_y = directions[d_index]
            next_x, next_y = x + diff_x, y + diff_y
        x, y = next_x, next_y
    
    for line in result:
        print(" ".join(line))


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
