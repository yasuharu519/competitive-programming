#!/usr/bin/env python3
import sys
import math


def solve(N: int, S: int, M: int, L: int):
    result = float('inf')

    for s in range(math.ceil(N / 6) + 1):
        for m in range(math.ceil(N / 8) + 1):
            for l in range(math.ceil(N / 12) + 1):
                if 6 * s + 8 * m + 12 * l >= N:
                    result = min(result, S * s + M * m + L * l)

    print(result)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    L = int(next(tokens))  # type: int
    solve(N, S, M, L)

if __name__ == '__main__':
    main()
