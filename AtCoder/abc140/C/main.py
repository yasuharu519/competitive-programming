#!/usr/bin/env python3
import sys


def solve(N: int, B: "List[int]"):
    lenB = len(B)
    count = B[0] + B[-1]

    for i in range(lenB - 1):
        count += min(B[i], B[i + 1])

    print(count)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    B = [int(next(tokens)) for _ in range(N - 1)]  # type: "List[int]"
    solve(N, B)


if __name__ == '__main__':
    main()
