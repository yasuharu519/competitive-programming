#!/usr/bin/env python3
import sys
from typing import List

YES = "Yes"  # type: str
NO = "No"  # type: str


def canSolve(N: int, K: int) -> bool:
    originalN = N
    L = 0
    while N > 0:
        div, mod = divmod(N, 3)
        L += mod
        N = div
    L += N

    if (L % 2 == 1 and K % 2 == 0) or (L % 2 == 0 and K % 2 == 1):
        return False

    return L <= K <= originalN


def solve(T: int, cases: List[List[int]]):
    for case in cases:
        N, K = case
        res = canSolve(N, K)
        print(YES if res else NO)
    pass


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    # Failed to predict input format
    T = int(sys.stdin.readline())
    cases = []
    for _ in range(T):
        cases.append([int(x) for x in sys.stdin.readline().split()])
    solve(T, cases)
    pass


if __name__ == '__main__':
    main()
