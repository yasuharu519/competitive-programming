#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[str]"):
    n = len(A)
    result = [[0] * n for _ in range(n)]

    for i in range(n):
        for j in range(n):
            if i == 0 and j == 0:
                result[i][j] = A[i + 1][j]
            elif i == n - 1 and j == n - 1:
                result[i][j] = A[i - 1][j]
            elif i == 0:
                result[i][j] = A[i][j - 1]
            elif i == n - 1:
                result[i][j] = A[i][j + 1]
            elif j == 0:
                result[i][j] = A[i + 1][j]
            elif j == n - 1:
                result[i][j] = A[i - 1][j]
            else:
                result[i][j] = A[i][j]

    for line in result:
        print("".join(line))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, A)


if __name__ == '__main__':
    main()
